import React, { forwardRef } from 'react'
import PropTypes from 'prop-types'

import { getCopy } from '@tds/util-helpers'

import {
  colorAccessibleGreen,
  colorTelusGreen,
  colorTelusPurple,
  colorWhite,
} from '@tds/core-colours'
import { newNotifyBoldCopyDictionary } from './navButtonText'

import NavButtonInteractiveIcon, { StyledInteractiveIconSVG } from '../../NavButton'

const UnreadNotification = forwardRef(({ copy, ...props }, ref) => (
  <NavButtonInteractiveIcon
    {...props}
    ref={ref}
    a11yText={getCopy(newNotifyBoldCopyDictionary, copy).a11yText}
    copy={copy} // Passed in to satisfy styleguidist workaround
  >
    <StyledInteractiveIconSVG width="24" height="24" viewBox="0 0 24 24" aria-hidden="true">
      <path d="M11.9996,0.0002 C13.32248,0.0002 14.4094304,1.0075088 14.4942698,2.27629395 L14.4996,2.4362 L14.4996,3.7822 C17.0406,4.6412 18.9016,6.7882 19.2276,9.5122 L19.264225,10.210825 C19.2778969,10.5438719 19.2901332,10.9612332 19.290299,11.3872916 L19.2869987,12.0848432 C19.2886515,13.2905843 19.3717282,14.535302 20.1109442,15.9161784 L20.2796,16.2142 L21.8216,18.7582 C22.0496,19.1312 22.0586,19.6022 21.8426,19.9862 C21.6464,20.3363 21.29144,20.56652 20.895818,20.609063 L20.7626,20.6162 L14.8976,20.6162 L14.92272,20.806408 C14.93136,20.8846 14.9346,20.9404 14.9346,20.9872 C14.9346,22.6482 13.6116,24.0002 11.9846,24.0002 C10.3576,24.0002 9.0346,22.6482 9.0346,20.9872 C9.0346,20.9242 9.0407875,20.8448875 9.05442812,20.7357625 L9.0706,20.6162 L3.2366,20.6162 C2.7876,20.6162 2.3736,20.3752 2.1556,19.9862 C1.96448889,19.6448667 1.94957531,19.2347926 2.11015693,18.8838022 L2.1786,18.7552 L3.7236,16.2082 C4.66101176,14.6373765 4.75070035,13.246373 4.71715669,11.8559427 L4.70291651,11.2504571 C4.69690796,10.3912865 4.76495294,9.58414118 4.7676,9.5462 C5.08563333,6.88786667 6.83523556,4.78646222 9.24770152,3.87248748 L9.4996,3.7822 L9.4996,2.4362 C9.4996,1.0932 10.6216,0.0002 11.9996,0.0002 Z M13.1356,20.6162 L10.8336,20.6162 C10.8306,20.6582 10.8246,20.6992 10.8246,20.7422 C10.8246,21.4972 11.3446,22.1092 11.9846,22.1092 C12.6246,22.1092 13.1446,21.4972 13.1446,20.7422 C13.1446,20.6992 13.1386,20.6582 13.1356,20.6162 Z M11.9996,5.3722 C9.30330588,5.3722 7.19296159,7.06787474 6.78954113,9.52386011 L6.7576,9.7492 C6.7576,9.7492 6.68992422,10.5718562 6.70453604,11.3692989 L6.72060161,12.0306112 C6.73938419,13.4781932 6.60148186,15.128641 5.61079631,16.9349293 L5.4366,17.2392 L4.6016,18.6162 L19.3966,18.6162 L18.5656,17.2452 C17.4376909,15.3547 17.2965649,13.6536504 17.2874235,12.2232152 L17.2896605,11.2226492 C17.2835219,10.4270281 17.237475,9.70395 17.2366,9.6952 C16.9336,7.1722 14.7776,5.3722 11.9996,5.3722 Z M11.9996,1.9122 C11.6191833,1.9122 11.3043083,2.18276944 11.2544709,2.53365544 L11.2476,2.6312 L11.2476,3.4092 C11.4956,3.3862 11.7456,3.3722 11.9996,3.3722 C12.1689333,3.3722 12.3364889,3.37842222 12.502563,3.38938519 L12.7506,3.4092 L12.7506,2.6312 C12.7506,2.2342 12.4136,1.9122 11.9996,1.9122 Z" />
      <circle
        id="Indicator"
        stroke={props?.variant === 'inverted' ? colorTelusPurple : colorWhite}
        fill={props?.variant === 'inverted' ? colorTelusGreen : colorAccessibleGreen}
        cx="18.5"
        cy="8.5"
        r="5"
      />
    </StyledInteractiveIconSVG>
  </NavButtonInteractiveIcon>
))

UnreadNotification.propTypes = {
  copy: PropTypes.oneOfType([
    PropTypes.oneOf(['en', 'fr']),
    PropTypes.shape({
      a11yText: PropTypes.string.isRequired,
    }),
  ]).isRequired,
}

UnreadNotification.displayName = 'UnreadNotification'

export default UnreadNotification
